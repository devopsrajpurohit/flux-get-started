releaseName: victoria-metrics-cluster
  chart:
    repository: https://victoriametrics.github.io/helm-charts/
    name: victoria-metrics-cluster
    version: 0.6.5
  values:
   global:
      clusterDomainSuffix: cluster.local
      printNotes: true
      imagePullSecrets: []
      rbac:
        create: true
        pspEnabled: true
        namespaced: false
        extraLabels: {}
      serviceAccount:
        create: true
        extraLabels: {}
      vmselect:
        enabled: true
        name: vmselect
      image:
        repository: victoriametrics/vmselect
        tag: v1.40.1-cluster
        pullPolicy: IfNotPresent
        priorityClassName: ""
        fullnameOverride: ""  
        suppresStorageFQDNsRender: false
        extraArgs: {}
        annotations: {}
        extraLabels: {}
      podDisruptionBudget:
        enabled: false
        labels: {}
      tolerations: []
      nodeSelector: {}
      affinity: {}
      podAnnotations: {}
      replicaCount: 2
      resources: {}
      limits:
        cpu: 50m
        memory: 64Mi
      requests:
        cpu: 50m
        memory: 64Mi

      securityContext: {}
      cacheMountPath: /cache
      service:
        annotations: {}
        labels: {}
        clusterIP: ""
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
        externalIPs: []
        loadBalancerIP: ""
        loadBalancerSourceRanges: []
        servicePort: 8481
        type: ClusterIP
     ingress:
        enabled: false
        annotations: {}
  
       extraLabels: {}
       hosts: []
       tls: []
      statefulSet:
    ## Creates statefulset instead of deployment, useful when you want to keep the cache
        enabled: false
        podManagementPolicy: OrderedReady
    ## Headless service for statefulset
      service:
        annotations: {}
        labels: {}
        servicePort: 8481
      persistentVolume:
        enabled: false
      accessModes:
      - ReadWriteOnce
      annotations: {}
      existingClaim: ""

      size: 2Gi
      subPath: ""
      serviceMonitor:
      enabled: false
      extraLabels: {}
      annotations: {}
    vminsert:
      enabled: true
      name: vminsert
    image:
       repository: victoriametrics/vminsert
       tag: v1.40.1-cluster
       pullPolicy: IfNotPresent
       priorityClassName: ""
       fullnameOverride: ""
       extraArgs: {}
       annotations: {}
       extraLabels: {}
  ## If true suppress rendering `--stroageNodes`, they can be re-defined in exrtaArgs
       suppresStorageFQDNsRender: false

    podDisruptionBudget:
       enabled: false
    # minAvailable: 1
    # maxUnavailable: 1
      labels: {}
    tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule"

  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
    nodeSelector: {}
  ## Pod affinity
  ##
    affinity: {}
    podAnnotations: {}
    replicaCount: 2
    resources: {}
     limits:
       cpu: 50m
       memory: 64Mi
     requests:
        cpu: 50m
        memory: 64Mi
    securityContext: {}
    service:
      annotations: {}
      labels: {}
      clusterIP: ""
      ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
      ##
      externalIPs: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 8480
      type: ClusterIP
    ingress:
      enabled: false
      annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'
      extraLabels: {}
      hosts: []
    # - name: vminsert.local
    #   path: /insert
    #   port: http
     tls: []
    #   - secretName: vminsert-ingress-tls
    #     hosts:
    #       - vminsert.local
     serviceMonitor:
       enabled: false
       extraLabels: {}
       annotations: {}
#    interval: 15s
#    scrapeTimeout: 5s

    vmstorage:
      enabled: true
      name: vmstorage
    image:
      repository: victoriametrics/vmstorage
      tag: v1.40.1-cluster
      pullPolicy: IfNotPresent
      priorityClassName: ""
      fullnameOverride:
  ## Data retention period in month
  ##
      retentionPeriod: 1
  ## Additional vmstorage container arguments
  ##
      extraArgs: {}

  ## See `kubectl explain poddisruptionbudget.spec` for more
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
     podDisruptionBudget:
        enabled: false
    # minAvailable: 1
    # maxUnavailable: 1
        labels: {}

  ## Node tolerations for server scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
      tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule"

  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
     nodeSelector: {}

  ## Pod affinity
  ##
    affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

    persistentVolume:
    ## If true,  vmstorage will create/use a Persistent Volume Claim
    ## If false, use emptyDir
    ##
      enabled: true

    ## Must match those of existing PV or dynamic provisioner
    ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
      accessModes:
        - ReadWriteOnce
      annotations: {}

    ## Requires vmstorage.persistentVolume.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
      existingClaim: ""

    ## Vmstorage data Persistent Volume mount root path
    ##
      mountPath: /storage
      size: 8Gi
      subPath: ""

    podAnnotations: {}
    annotations: {}
    extraLabels: {}
    replicaCount: 2
    podManagementPolicy: OrderedReady

  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
    resources: {}
      limits:
         cpu: 500m
         memory: 512Mi
     requests:
        cpu: 500m
        memory: 512Mi

 
    securityContext: {}
    service:
      annotations: {}
      labels: {}
      servicePort: 8482
      vminsertPort: 8400
      vmselectPort: 8401
      terminationGracePeriodSeconds: 60
    probe:
      readiness:
        initialDelaySeconds: 5
        periodSeconds: 15
        timeoutSeconds: 5
        failureThreshold: 3
      liveness:
        initialDelaySeconds: 5
        periodSeconds: 15
        timeoutSeconds: 5
        failureThreshold: 3
      serviceMonitor:
        enabled: false
        extraLabels: {}
        annotations: {}
  #    interval: 15s
  #    scrapeTimeout: 5s